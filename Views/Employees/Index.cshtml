@model IEnumerable<PulseFit.Management.Web.Models.EmployeeViewModel>
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Employee List";
    var jsonSerializerSettings = new JsonSerializerSettings
            {
                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,
                Formatting = Formatting.Indented
            };
    var serializedData = JsonConvert.SerializeObject(Model, jsonSerializerSettings);
}

<div class="container my-5">
    <h2 class="title-neon mb-4">Employee List</h2>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <a asp-action="Create" class="btn btn-neon-pink neon-hover-shadow">Create New Employee</a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert-neon text-center">No employees found.</div>
    }
    else
    {
        <div id="Grid"></div>
    }
</div>

@section Scripts {
    <script id="profilePictureTemplate" type="text/x-template">
        <img src="${ProfilePictureUrl}" alt="Profile Picture" style="width: 60px; height: 60px; border-radius: 50%; border: 2px solid var(--neon-blue);" />
    </script>

    <script id="actionTemplate" type="text/x-template">
        <a href="/Employees/Edit/${Id}" class="btn btn-neon-blue neon-hover-shadow me-2">Edit</a>
        <a href="/Employees/Delete/${Id}" class="btn btn-neon-pink neon-hover-shadow me-2">Delete</a>
        <a href="/Employees/Details/${Id}" class="btn btn-neon-green neon-hover-shadow">Details</a>
    </script>

    <script>
        $(document).ready(function () {
            var serializedData = @Html.Raw(serializedData);

            // Mapping Status, EmployeeType, and ShiftType
            serializedData.forEach(function (employee) {
                // Map Status
                switch (employee.Status) {
                    case 0:
                        employee.StatusText = "Pending";
                        break;
                    case 1:
                        employee.StatusText = "Active";
                        break;
                    case 2:
                        employee.StatusText = "Inactive";
                        break;
                }

                // Map EmployeeType
                switch (employee.EmployeeType) {
                    case 0:
                        employee.EmployeeTypeText = "Secretary";
                        break;
                    case 1:
                        employee.EmployeeTypeText = "Cleaning Staff";
                        break;
                    case 2:
                        employee.EmployeeTypeText = "Receptionist";
                        break;
                    case 3:
                        employee.EmployeeTypeText = "Manager";
                        break;
                    case 4:
                        employee.EmployeeTypeText = "Other";
                        break;
                }

                // Map ShiftType
                switch (employee.Shift) {
                    case 0:
                        employee.ShiftText = "Morning";
                        break;
                    case 1:
                        employee.ShiftText = "Afternoon";
                        break;
                    case 2:
                        employee.ShiftText = "Evening";
                        break;
                    case 3:
                        employee.ShiftText = "Night";
                        break;
                    case 4:
                        employee.ShiftText = "Flexible";
                        break;
                    case 5:
                        employee.ShiftText = "None";
                        break;
                }
            });

            // Grid Configuration
            var grid = new ej.grids.Grid({
                dataSource: serializedData,
                allowPaging: true,
                allowSorting: true,
                allowFiltering: true,
                pageSettings: { pageSize: 10 },
                toolbar: ['Search'],
                columns: [
                    { field: "ProfilePictureUrl", headerText: "Profile Picture", width: 120, template: "#profilePictureTemplate" },
                    { field: "FirstName", headerText: "First Name", width: 140 },
                    { field: "LastName", headerText: "Last Name", width: 140 },
                    { field: "EmployeeTypeText", headerText: "Employee Type", width: 180 },
                    { field: "ShiftText", headerText: "Shift Type", width: 140 },
                    { field: "StatusText", headerText: "Status", width: 120 },
                    { headerText: "Actions", width: 220, template: "#actionTemplate" }
                ],
                rowHeight: 60, // Aumenta a altura das linhas
                gridLines: 'Horizontal',
                queryCellInfo: function (args) {
                    args.cell.style.fontSize = "1.1rem"; // Ajusta o tamanho da fonte
                }
            });
            grid.appendTo("#Grid");
        });
    </script>
}
